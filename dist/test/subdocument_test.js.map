{"version":3,"sources":["../../test/subdocument_test.js"],"names":["assert","require","User","describe","it","done","joe","name","posts","title","save","then","findOne","user","push","remove","length"],"mappings":";;AAAA;;;AAGA,IAAMA,SAASC,QAAQ,QAAR,CAAf;AACA,IAAMC,OAAOD,QAAQ,aAAR,CAAb;;AAEAE,SAAS,cAAT,EAAyB,YAAM;AAC5BC,OAAG,0BAAH,EAA+B,UAACC,IAAD,EAAU;AACtC,YAAMC,MAAM,IAAIJ,IAAJ,CAAS;AACjBK,kBAAM,KADW;AAEjB;AACAC,mBAAO,CAAC,EAACC,OAAO,WAAR,EAAD;AAHU,SAAT,CAAZ;;AAMAH,YAAII,IAAJ,GACKC,IADL,CACU;AAAA,mBAAMT,KAAKU,OAAL,CAAa,EAACL,MAAM,KAAP,EAAb,CAAN;AAAA,SADV,EAEKI,IAFL,CAEU,UAACE,IAAD,EAAU;AACdb,mBAAOa,KAAKL,KAAL,CAAW,CAAX,EAAcC,KAAd,KAAwB,WAA/B;AACAJ;AACD,SALL;AAOF,KAdD;;AAgBAD,OAAG,4CAAH,EAAiD,UAACC,IAAD,EAAU;AACtD,YAAMC,MAAM,IAAIJ,IAAJ,CAAS;AACjBK,kBAAM,KADW;AAEjB;AACAC,mBAAO;AAHU,SAAT,CAAZ;AAKAF,YAAII,IAAJ,GACKC,IADL,CACU;AAAA,mBAAMT,KAAKU,OAAL,CAAa,EAACL,MAAM,KAAP,EAAb,CAAN;AAAA,SADV;AAEI;AAFJ,SAGKI,IAHL,CAGU,UAACE,IAAD,EAAU;AACZA,iBAAKL,KAAL,CAAWM,IAAX,CAAgB,EAACL,OAAO,UAAR,EAAhB;AACA;AACA,mBAAOI,KAAKH,IAAL,EAAP;AACH,SAPL,EAQKC,IARL,CAQU;AAAA,mBAAMT,KAAKU,OAAL,CAAa,EAACL,MAAM,KAAP,EAAb,CAAN;AAAA,SARV,EASKI,IATL,CASU,UAACE,IAAD,EAAU;AACZb,mBAAOa,KAAKL,KAAL,CAAW,CAAX,EAAcC,KAAd,KAAwB,UAA/B;AACAJ;AACH,SAZL;AAaJ,KAnBD;;AAqBAD,OAAG,oCAAH,EAAyC,UAACC,IAAD,EAAU;AAC9C,YAAMC,MAAM,IAAIJ,IAAJ,CAAS;AACjBK,kBAAM,KADW;AAEjBC,mBAAO,CAAC,EAACC,OAAO,WAAR,EAAD;AAFU,SAAT,CAAZ;;AAKAH,YAAII,IAAJ,GACKC,IADL,CACU;AAAA,mBAAMT,KAAKU,OAAL,CAAa,EAACL,MAAM,KAAP,EAAb,CAAN;AAAA,SADV,EAEKI,IAFL,CAEU,UAACE,IAAD,EAAU;AACZ;AACA;AACAA,iBAAKL,KAAL,CAAW,CAAX,EAAcO,MAAd;AACA;AACA,mBAAOF,KAAKH,IAAL,EAAP;AACH,SARL,EASKC,IATL,CASU;AAAA,mBAAMT,KAAKU,OAAL,CAAa,EAACL,MAAM,KAAP,EAAb,CAAN;AAAA,SATV,EAUKI,IAVL,CAUU,UAACE,IAAD,EAAU;AACZb,mBAAOa,KAAKL,KAAL,CAAWQ,MAAX,KAAsB,CAA7B;AACAX;AACH,SAbL;AAcJ,KApBD;AAqBF,CA3DD","file":"subdocument_test.js","sourcesContent":["/**\n * Created by david on 4/22/17.\n */\nconst assert = require('assert');\nconst User = require('../src/user');\n\ndescribe('subdocuments', () => {\n   it('can create a subdocument', (done) => {\n      const joe = new User({\n          name: 'Joe',\n          // if you look at the model you know you need an array and if you look at the postSchema you know you need a title property and value\n          posts: [{title: 'PostTitle'}]\n      });\n\n      joe.save()\n          .then(() => User.findOne({name: 'Joe'}))\n          .then((user) => {\n            assert(user.posts[0].title === \"PostTitle\");\n            done();\n          })\n\n   });\n\n   it('can add subdocuments to an existing record', (done) => {\n        const joe = new User({\n            name: 'Joe',\n            //empty array not required just for testing clarity\n            posts: []\n        });\n        joe.save()\n            .then(() => User.findOne({name: 'Joe'}))\n            // because the content below is wrapped in {} nothing is returned, thus return user.save() to keep the .then chain rolling\n            .then((user) => {\n                user.posts.push({title: 'New Post'});\n                // have to save the whole thing here not just the post\n                return user.save()\n            })\n            .then(() => User.findOne({name: 'Joe'}))\n            .then((user) => {\n                assert(user.posts[0].title === 'New Post');\n                done();\n            })\n   });\n\n   it('can remove an existing subdocument', (done) => {\n        const joe = new User({\n            name: 'Joe',\n            posts: [{title: 'New Title'}]\n        });\n\n        joe.save()\n            .then(() => User.findOne({name: 'Joe'}))\n            .then((user) => {\n                // remove is mongoose function not vanilla js\n                // you aren't actually working directly with the db here you are accessing a copy of the user and then saving the updated user/user posts to the db\n                user.posts[0].remove();\n                //save on the parent of what you're updating\n                return user.save();\n            })\n            .then(() => User.findOne({name: 'Joe'}))\n            .then((user) => {\n                assert(user.posts.length === 0);\n                done();\n            })\n   });\n});"]}