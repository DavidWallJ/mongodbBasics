{"version":3,"sources":["../../test/test_helper.js"],"names":["mongoose","require","Promise","global","before","done","connect","connection","once","on","error","console","warn","beforeEach","collections","users","comments","blogposts","drop"],"mappings":";;AAAA;;;AAGA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;;AAEA;AACAD,SAASE,OAAT,GAAmBC,OAAOD,OAA1B;;AAEA;AACA;AACA;;AAEAE,OAAO,UAACC,IAAD,EAAU;AACbL,aAASM,OAAT,CAAiB,gCAAjB;AACAN,aAASO,UAAT,CACKC,IADL,CACU,MADV,EACkB,YAAM;AAAEH;AAAS,KADnC,EAEKI,EAFL,CAEQ,OAFR,EAEiB,UAACC,KAAD,EAAW;AACpBC,gBAAQC,IAAR,CAAa,SAAb,EAAwBF,KAAxB;AAEH,KALL;AAMH,CARD;;AAWA;AACA;AACAG,WAAW,UAACR,IAAD,EAAU;AACjB;AACA;AAFiB,gCAGoBL,SAASO,UAAT,CAAoBO,WAHxC;AAAA,QAGVC,KAHU,yBAGVA,KAHU;AAAA,QAGHC,QAHG,yBAGHA,QAHG;AAAA,QAGOC,SAHP,yBAGOA,SAHP;AAIjB;;AACAF,UAAMG,IAAN,CAAW,YAAM;AACbF,iBAASE,IAAT,CAAc,YAAM;AAChBD,sBAAUC,IAAV,CAAe,YAAM;AACjBb;AACH,aAFD;AAGH,SAJD;AAKH,KAND;AAOH,CAZD","file":"test_helper.js","sourcesContent":["/**\n * Created by david on 4/21/17.\n */\nconst mongoose = require('mongoose');\n\n// use the local environments promise style which is currently es6\nmongoose.Promise = global.Promise;\n\n// mongoose connect\n// before unlike beforeEach only runs once\n// done ensures that even if mongoose takes a while to load it waits until it's really connected\n\nbefore((done) => {\n    mongoose.connect('mongodb://localhost/users_test');\n    mongoose.connection\n        .once('open', () => { done(); })\n        .on('error', (error) => {\n            console.warn('Warning', error);\n\n        });\n});\n\n\n// before each test in this situation the users table will be dropped\n// 'done' is a mocha object that signals to mocha it can now move on\nbeforeEach((done) => {\n    // es6 pulls the users, comments, and blogPosts off of the collections object and gives you the three consts\n    // NOTE: when mongoose loads up these collections to mongo db the names will be com all lowercase so you've changed 'blogPosts' to 'blogposts'\n    const {users, comments, blogposts} = mongoose.connection.collections;\n    // in mongoose you have to drop collections one at a time\n    users.drop(() => {\n        comments.drop(() => {\n            blogposts.drop(() => {\n                done();\n            });\n        });\n    });\n});"]}