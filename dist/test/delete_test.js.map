{"version":3,"sources":["../../test/delete_test.js"],"names":["assert","require","User","describe","beforeEach","done","joe","name","save","then","it","remove","findOne","user","findOneAndRemove","findByIdAndRemove","_id"],"mappings":";;AAAA;;;AAGA,IAAMA,SAASC,QAAQ,QAAR,CAAf;AACA;AACA,IAAMC,OAAOD,QAAQ,aAAR,CAAb;;AAEAE,SAAS,iBAAT,EAA4B,YAAM;;AAE9BC,eAAW,UAACC,IAAD,EAAU;AACjB;AACAC,cAAM,IAAIJ,IAAJ,CAAS,EAACK,MAAM,KAAP,EAAT,CAAN;AACAD,YAAIE,IAAJ,GACKC,IADL,CACU;AAAA,mBAAMJ,MAAN;AAAA,SADV;AAEH,KALD;;AAOA;;AAEAK,OAAG,uBAAH,EAA4B,UAACL,IAAD,EAAU;AAClCC,YAAIK,MAAJ,GACKF,IADL,CACU;AAAA,mBAAMP,KAAKU,OAAL,CAAa,EAAEL,MAAM,KAAR,EAAb,CAAN;AAAA,SADV,EAEKE,IAFL,CAEU,UAACI,IAAD,EAAU;AACZb,mBAAOa,SAAS,IAAhB;AACAR;AACH,SALL;AAMH,KAPD;;AASAK,OAAG,uBAAH,EAA4B,UAACL,IAAD,EAAU;AAClC;AACAH,aAAKS,MAAL,CAAY,EAAEJ,MAAK,KAAP,EAAZ,EACKE,IADL,CACU;AAAA,mBAAMP,KAAKU,OAAL,CAAa,EAACL,MAAM,KAAP,EAAb,CAAN;AAAA,SADV,EAEKE,IAFL,CAEU,UAACI,IAAD,EAAU;AACZb,mBAAOa,SAAS,IAAhB;AACAR;AACH,SALL;AAMH,KARD;;AAUAK,OAAG,4BAAH,EAAiC,UAACL,IAAD,EAAU;AACvCH,aAAKY,gBAAL,CAAsB,EAAEP,MAAM,KAAR,EAAtB,EACKE,IADL,CACU;AAAA,mBAAMP,KAAKU,OAAL,CAAa,EAACL,MAAM,KAAP,EAAb,CAAN;AAAA,SADV,EAEKE,IAFL,CAEU,UAACI,IAAD,EAAU;AACZb,mBAAOa,SAAS,IAAhB;AACAR;AACH,SALL;AAMH,KAPD;;AASAK,OAAG,gCAAH,EAAqC,UAACL,IAAD,EAAU;AAC3CH,aAAKa,iBAAL,CAAuBT,IAAIU,GAA3B,EACKP,IADL,CACU;AAAA,mBAAMP,KAAKU,OAAL,CAAa,EAACL,MAAM,KAAP,EAAb,CAAN;AAAA,SADV,EAEKE,IAFL,CAEU,UAACI,IAAD,EAAU;AACZb,mBAAOa,SAAS,IAAhB;AACAR;AACH,SALL;AAMH,KAPD;AAQH,CA/CD","file":"delete_test.js","sourcesContent":["/**\n * Created by david on 4/22/17.\n */\nconst assert = require('assert');\n// these asserts are for checking only\nconst User = require('../src/user');\n\ndescribe('Deleting a user', () => {\n\n    beforeEach((done) => {\n        // this joe variable is a global var just so we can call it outside of this function\n        joe = new User({name: 'Joe'});\n        joe.save()\n            .then(() => done());\n    });\n\n    // these are different methods of removing the same instance of a user\n\n    it('model instance remove', (done) => {\n        joe.remove()\n            .then(() => User.findOne({ name: 'Joe'}))\n            .then((user) => {\n                assert(user === null);\n                done();\n            });\n    });\n\n    it('model instance remove', (done) => {\n        //remove a bunch of records with some given criteria\n        User.remove({ name:'Joe' })\n            .then(() => User.findOne({name: 'Joe'}))\n            .then((user) => {\n                assert(user === null);\n                done();\n            });\n    });\n\n    it('class method findAndRemove', (done) => {\n        User.findOneAndRemove({ name: 'Joe'})\n            .then(() => User.findOne({name: 'Joe'}))\n            .then((user) => {\n                assert(user === null);\n                done();\n            });\n    });\n\n    it('class method findByIdAndRemove', (done) => {\n        User.findByIdAndRemove(joe._id)\n            .then(() => User.findOne({name: 'Joe'}))\n            .then((user) => {\n                assert(user === null);\n                done();\n            });\n    });\n});"]}